<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-09-30T15:47:20-07:00</updated><id>http://localhost:4000/</id><title type="html">josh shi</title><subtitle>josh shi cool man funny website haha</subtitle><entry><title type="html">Placevalue Ascii Playground</title><link href="http://localhost:4000/2018/06/18/placevalue-ascii-playground.html" rel="alternate" type="text/html" title="Placevalue Ascii Playground" /><published>2018-06-18T07:19:00-07:00</published><updated>2018-06-18T07:19:00-07:00</updated><id>http://localhost:4000/2018/06/18/placevalue-ascii-playground</id><content type="html" xml:base="http://localhost:4000/2018/06/18/placevalue-ascii-playground.html"></content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/placevalue-ascii/placevalue-ascii.png" /></entry><entry><title type="html">“Physical Media” by Alexander Galloway</title><link href="http://localhost:4000/2018/03/12/physical-media.html" rel="alternate" type="text/html" title="“Physical Media” by Alexander Galloway" /><published>2018-03-12T19:49:00-07:00</published><updated>2018-03-12T19:49:00-07:00</updated><id>http://localhost:4000/2018/03/12/physical-media</id><content type="html" xml:base="http://localhost:4000/2018/03/12/physical-media.html">&lt;p&gt;I just finished what was a pretty brutal course on networking this past quarter (I’m writing this essay two days after the final). Reading this chapter from Alexander Galloway’s book, &lt;em&gt;Protocol&lt;/em&gt;, was both refreshing and retraumatizing.&lt;/p&gt;

&lt;p&gt;Galloway gives a good overview of many different parts of networking, including the history of the Internet and a quick yet surprisingly comprehensive summary of TCP/IP, but the most interesting part (what, you don’t think a description of a network protocol is interesting?) comes in the last paragraph:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To follow a protocol means that everything possible within that protocol is already at one’s fingertips. Not to follow means no possibility. Thus, protocological analysis must focus on the possible and the impossible (the envelope of possibility), not a demystification of some inner meaning or “rational kernel” within technology. &lt;em&gt;Protocol is a circuit, not a sentence&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Galloway argues for this by saying that protocols are necessarily against interpretation because they simply encode and decode the data which gets sent their way and do “little to transcode the meaning of the semantic units of value that pass in and out of its purview.” This idea didn’t make a lot of sense to me when I first read it. After all, I thought we had already seen discussions of this through things like Mark C. Marino’s &lt;a href=&quot;http://www.electronicbookreview.com/thread/electropoetics/codology&quot;&gt;“Critical Code Studies”&lt;/a&gt; or Nick Montfort’s &lt;em&gt;10 PRINT CHR$(205.5+RND(1)); : GOTO 10&lt;/em&gt;: while it is true that computers do not understand the semantics of the programs they run, that doesn’t mean that those programs are without meaning.&lt;/p&gt;

&lt;p&gt;What makes protocols different, however, is that a protocol has no text. A C++ implementation of TCP is not TCP, nor is the RFC for TCP. A protocol is like an algorithm: there are many ways of implementing it, which means that there is no single “canonical” implementation. Thus, while we can read and derive meaning from artifacts around TCP (like the aforementioned C++ implementation or its RFC), analysis of the actual protocol itself must be restricted to what it can do (i.e. what Galloway refers to as its “possibility”).&lt;/p&gt;</content><author><name></name></author><category term="writing" /><summary type="html">I just finished what was a pretty brutal course on networking this past quarter (I’m writing this essay two days after the final). Reading this chapter from Alexander Galloway’s book, Protocol, was both refreshing and retraumatizing.</summary></entry><entry><title type="html">“Beyond Typography” by Michael Rock</title><link href="http://localhost:4000/2018/02/14/beyond-typography.html" rel="alternate" type="text/html" title="“Beyond Typography” by Michael Rock" /><published>2018-02-14T18:49:00-08:00</published><updated>2018-02-14T18:49:00-08:00</updated><id>http://localhost:4000/2018/02/14/beyond-typography</id><content type="html" xml:base="http://localhost:4000/2018/02/14/beyond-typography.html">&lt;p&gt;Another piece published during the “Typography Wars” of the late 80s-90s, here Michael Rock talks about some of the interesting work that took place when people started to realize that software (in particular desktop publishing and font design software) provided opportunities to do things which previously had prohibitive barriers to entry.&lt;/p&gt;

&lt;p&gt;Of course, the first (and necessary) stage of a new technology is a child-like exploration. The old ways, the traditional ways, of doing things are eschewed in favor of novelty. But in many cases, as it was in this, the exploration is not a meandering: the designers working with these technologies in the 90s were interested in more than just making new things—they wanted to make things that challenged a lot of underlying assumptions we had about how our world looked and what it said. Thus, there were some incredible thought-provoking projects liked Fuse and &lt;em&gt;Emigre&lt;/em&gt; which pushed the conversation around design and type. In the process, Rock points out, we come to understand what it is we’re changing in a deeper way:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;But the alphabet poses a unique contradiction to the quest for originality and the neomania that marks the modern movement. The alphabet — not unlike the grid Krauss points to as the foundational metaphor invoked in modern painting – is inherently originless. The alphabet is a given it predates all who come to it. And so every designer that works in the grid provided by the conventional forms of the alphabet is condemned — to use a degraded term — to endless repetition of those accepted forms. The designer can manipulate them only insofar as the constructed form is still within the realm of what is known to be the letter. Once that boundary has been crossed, the designer reverts to a skillful maker of plastic form but can no longer claim to work in the domain of the linguistic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;P.S. This essay, while very good in its own right, is worth reading for its incredible ending alone. Who knew there was poetry in typography.&lt;/p&gt;</content><author><name></name></author><category term="writing" /><summary type="html">Another piece published during the “Typography Wars” of the late 80s-90s, here Michael Rock talks about some of the interesting work that took place when people started to realize that software (in particular desktop publishing and font design software) provided opportunities to do things which previously had prohibitive barriers to entry.</summary></entry><entry><title type="html">“The Making of Typographic Man” by Ellen Lupton</title><link href="http://localhost:4000/2018/02/12/typographic-man.html" rel="alternate" type="text/html" title="“The Making of Typographic Man” by Ellen Lupton" /><published>2018-02-12T18:49:00-08:00</published><updated>2018-02-12T18:49:00-08:00</updated><id>http://localhost:4000/2018/02/12/typographic-man</id><content type="html" xml:base="http://localhost:4000/2018/02/12/typographic-man.html">&lt;p&gt;This essay was written not too long ago (in April of 2016), but it’s interesting to see just how much the landscape of digital typography has changed since then. Five months after the publication of Ellen Lupton’s “The Making of Typographic Man,” the specification for a new OpenType feature, variable fonts, would be announced in a joint effort by Adobe, Apple, Google, and Microsoft. Since then, people have sung its praises and &lt;a href=&quot;https://practicaltypography.com/the-scorpion-express.html&quot;&gt;expressed their doubts&lt;/a&gt;, but most importantly we’ve seen some very impressive and &lt;a href=&quot;https://www.axis-praxis.org&quot;&gt;interesting applications&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;That being said, while I do think that technological advances in typography are interesting, I can’t help but think that Lupton’s essay, which borrows the subtitle of Marshall McLuhan’s &lt;em&gt;The Gutenberg Galaxy&lt;/em&gt;, misses the mark when it focuses on typography.&lt;/p&gt;

&lt;p&gt;McLuhan’s original book was not so much necessarily concerned with typography itself, but with the book. It was the reproducibility and ease of distribution of the book (which admittedly would not have been possible without movable type) that fundamentally transformed the way people understood and interacted with the world. For many people, this was the moment when their sense of sight became the dominant way of obtaining information.&lt;/p&gt;

&lt;p&gt;There’s an obvious through-line we can draw to the modern day as well. Books, which were the first mass-produced manifestation of information, have ceded their information-holding capacity to disks and flash storage. Our culture today is still predominantly visual, but the things we’re looking at have changed. Screens now allow for many different pieces of information to be represented on the same display through time.&lt;/p&gt;</content><author><name></name></author><category term="writing" /><summary type="html">This essay was written not too long ago (in April of 2016), but it’s interesting to see just how much the landscape of digital typography has changed since then. Five months after the publication of Ellen Lupton’s “The Making of Typographic Man,” the specification for a new OpenType feature, variable fonts, would be announced in a joint effort by Adobe, Apple, Google, and Microsoft. Since then, people have sung its praises and expressed their doubts, but most importantly we’ve seen some very impressive and interesting applications.</summary></entry><entry><title type="html">“Paradox on the Graphic Artist” by Jean-Francois Lyotard</title><link href="http://localhost:4000/2018/02/10/paradox-on-the-graphic-artist.html" rel="alternate" type="text/html" title="“Paradox on the Graphic Artist” by Jean-Francois Lyotard" /><published>2018-02-10T18:49:00-08:00</published><updated>2018-02-10T18:49:00-08:00</updated><id>http://localhost:4000/2018/02/10/paradox-on-the-graphic-artist</id><content type="html" xml:base="http://localhost:4000/2018/02/10/paradox-on-the-graphic-artist.html">&lt;p&gt;Designers, for some reason, tend to like describing what they do in terms of what other people do. Let’s enumerate the different roles of a graphic designer, as described in “Paradox on the Graphic Artist.” They are, simultaneously: artists, lawyers, witnesses, historians, judges, street artist, peddler, and promoter.&lt;/p&gt;

&lt;p&gt;It seems like designers are always going through this identity crisis (which has most recently been addressed by designers attempting to position themselves as “problem-solvers”), which seems worrying. After all, how are you supposed to prove that what you do has merit in its own right if you’re constantly having to ground your work through comparison to other, clearly “legitimate” professions?&lt;/p&gt;

&lt;p&gt;This crisis comes from what Jean-Francois Lyotard describes in this essay: designers are conflicted because their responsibilities so often sit in a contradictory position. Designers might be tasked with representing a given work or event, but there’s also a struggle within that to create: the have a sense of authorship independent of the represented thing which the designer has no control over. As Lyotard puts it, it’s the struggle between having to “offer their work and something other than their work: the thing… The graphic artist thus interprets, but here in the actor’s sense, for the actor too is a servant. Just as for the actor, there is a paradox in the graphic artist.” Michael Rock has offered his &lt;a href=&quot;http://2x4.org/ideas/2/fuck-content/&quot;&gt;own take&lt;/a&gt; on this topic, which is also quite good.&lt;/p&gt;

&lt;p&gt;I think one of the most interesting things that Lyotard points out, however, is the temporality of the designer’s profession as tied to the necessarily ephemeral nature of design:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Graphic art is not just good to sell things. It is always an object of circumstances, and consequently ephemeral. Of course, you can put it in archives, collect it and exhibit it—this is what we’re doing here. You thus suspend certain of the finalities we have designated: persuading, testifying. You retain only pleasing, which exceeds circumstance. You turn a piece of graphic art into an artwork. But you deceive and are deceived. The graphic object is circumstantial, but &lt;em&gt;essentially&lt;/em&gt; so. Inseparable from the event it promotes, thus from the location, the moment, and the public where the thing happens.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Design does not exist on its own, and by definition it cannot.&lt;/p&gt;</content><author><name></name></author><category term="writing" /><summary type="html">Designers, for some reason, tend to like describing what they do in terms of what other people do. Let’s enumerate the different roles of a graphic designer, as described in “Paradox on the Graphic Artist.” They are, simultaneously: artists, lawyers, witnesses, historians, judges, street artist, peddler, and promoter.</summary></entry><entry><title type="html">“Are Some Things Unrepresentable?” by Alexander Galloway</title><link href="http://localhost:4000/2018/02/08/are-some-things-unrepresentable.html" rel="alternate" type="text/html" title="“Are Some Things Unrepresentable?” by Alexander Galloway" /><published>2018-02-08T18:49:00-08:00</published><updated>2018-02-08T18:49:00-08:00</updated><id>http://localhost:4000/2018/02/08/are-some-things-unrepresentable</id><content type="html" xml:base="http://localhost:4000/2018/02/08/are-some-things-unrepresentable.html">&lt;p&gt;There’s a software architecture pattern known as MV* (the asterisk serves as a stand-in for various permutations of MV(something), e.g. MVVM, MVP), the most common of which is MVC, which stands for Model-View-Controller. It sounds a bit jargon-y at first, but the idea behind it is rather simple: any application can be thought of in three disjoint parts. We can take, as an example, a to-do list application.&lt;/p&gt;

&lt;p&gt;For this application, there is the Model, which houses the data. In the Model, the tasks might be represented in a data structure like an array. Each task might be as simple as a string containing the description of the task and may be as complex as an object which has additional attributes like a due date, whether the task was completed, etc. The View is how that data is represented to the user, and can be most typically thought of as being the same as the UI. The Controller is the part of the application which mutates the data—for example, on user input.&lt;/p&gt;

&lt;p&gt;This framework provides a tidy way of thinking about software because it provides a distinct separation of roles, and highlights one of the key points Alexander Galloway makes in “Are Some Things Unrepresentable:” that “&lt;em&gt;data have no necessary visual form&lt;/em&gt;.” After all, we are able to keep data and its visual representation completely separate. This realization is a bit of a Modernist approach to interpreting data, by understanding that a representation of data is not the same as data itself, &lt;em&gt;a la&lt;/em&gt; Magritte’s pipe.&lt;/p&gt;

&lt;p&gt;Galloway goes on to discuss a corollary of this idea, that data have no necessary visual form, which is that “&lt;em&gt;data have no necessary information&lt;/em&gt;.” This is another statement that at first glance seems a bit counterintuitive, but also makes sense. Data (thought described in terms of qualitative or quantitative, scalar or vector, etc), carries with it no meaning. It must be given meaning (literally, to be “given form”) in order for it to have any consequence. People’s entire livelihoods are predicated on this fact. For us to draw conclusions from data, they must be arranged in neat little rows: we have to order them in a time sequence or cluster them based on similar characteristics or compare groups of them to each other.&lt;/p&gt;

&lt;p&gt;This is also nothing new. There is, of course, that well-known line by Mark Twain about “lies, damned lies, and statistics.” Data, because it has no form, can be made to take any form. The veracity of the stories these forms tell now are now no longer related at all to the veracity of the data itself.&lt;/p&gt;

&lt;p&gt;The above two statements, if nothing else, should be enough to dispel that stubborn idea that the people who spend their lives thinking and dealing with information (software engineers, especially) are somehow absolved from the conclusions drawn from and systems built on top of that data. The data itself may be completely descriptive, but what we decide that description to be lies entirely on our judgment.&lt;/p&gt;

&lt;p&gt;P.S. For sake of coherency, I have neglected to talk about Galloway’s second (and equally important) thesis in “Are Some Things Representable,” which is that “&lt;em&gt;only one visualization has ever been made of an information network&lt;/em&gt;,” a statement which seems contradictory to the notion that data have no necessary visual representation (after all, doesn’t the fact that a certain type of data is only ever represented one way mean that it is equal to that representation, they are one and the same?). Galloway has some good discussion about why these statements can be simultaneously true, but I’d like to propose that it’s entirely possible that we have only ever come up with a single visualization of information networks because that is the only representation that we can make sense of. To answer Galloway’s question in letter and not in spirit, there are indeed things which are “unrepresentable” to us: anything in the fourth dimension fits that bill. And while there are &lt;a href=&quot;http://4dtoys.com&quot;&gt;attempts&lt;/a&gt; to translate four-dimensional objects into three (by chopping off one of those dimensions), it is predicated on a loss of information. It is very possible then that the one representation of an information network we are able to make is just one of many possible representations that exist—just not to us.&lt;/p&gt;</content><author><name></name></author><category term="writing" /><summary type="html">There’s a software architecture pattern known as MV* (the asterisk serves as a stand-in for various permutations of MV(something), e.g. MVVM, MVP), the most common of which is MVC, which stands for Model-View-Controller. It sounds a bit jargon-y at first, but the idea behind it is rather simple: any application can be thought of in three disjoint parts. We can take, as an example, a to-do list application.</summary></entry><entry><title type="html">“Stadtstaat” by Metahaven</title><link href="http://localhost:4000/2018/02/07/stadtstaat.html" rel="alternate" type="text/html" title="“Stadtstaat” by Metahaven" /><published>2018-02-07T18:49:00-08:00</published><updated>2018-02-07T18:49:00-08:00</updated><id>http://localhost:4000/2018/02/07/stadtstaat</id><content type="html" xml:base="http://localhost:4000/2018/02/07/stadtstaat.html">&lt;p&gt;Here comes another project overview, this time a take on a fictional merging between the real cities of Stuttgart (in Germany) and Utrecht (in the Netherlands). While Superstudio’s &lt;a href=&quot;http://ci.nikasimovich.com/assets/readings/superstudio-mindscapes.pdf&quot;&gt;Mindscapes&lt;/a&gt;, was like a Modernist fever dream, Metahavens’ Stadtstaat is technocrat’s fever dream, a town which has done away with traditional bureaucracy and government and has replaced it with a social network called “Trust,” which governs people by having them govern each other.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A socio-political Facebook, Trust is a networking platform that governs through public participation—an ‘open system’ presenting a shift from central decision making to managing social dynamics. The progress and partial victory of network architecture over built form is one of the core attributes of Stadtstaat’s new equilibrium. The transformation of urban space into an arena for networked sociability brings about a new understanding of what makes a place public. Not a public guaranteed by policing, but one negotiated by groups within the territory. Endure the politically correct jargon in the city-state of the oxymoron: ‘Managing diversity.’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The idea calls back to other, real projects designed to disperse what is traditionally the responsibility of one or few to many. It’s hard not to think about the popular use of GoFundMe to cover medical expenses which are neglected by the state.&lt;/p&gt;

&lt;p&gt;I recently attended a lecture on art and work by Jasper Bernes titled “The End of Participation: Art, Labor, Revolution” in which he touched upon similar ideas in the middle section of his reading (on “labor” part). These practices have come to be implemented in corporations through the flattening of organization charts and a push for employees to no longer report to a single manager but to each other, to keep each other responsible and accountable.&lt;/p&gt;

&lt;p&gt;What this does, of course, is not remove the watchful eye of the corporation (the company doesn’t all of a sudden care less about the labor). Instead what happens is employees take on the role that was previously occupied by a manager. The labor of management doesn’t stop getting done, it just gets redistributed.&lt;/p&gt;

&lt;p&gt;In Stadtstaat, the same thing happens. In fact, one of the posters created for the project includes the phrases “Extreme Democracy” and “Management. By the People.” It’s an outcome which seems both jarringly speculative and bizarrely familiar. After all, we already use the internet to find and communicate with communities of people similar to us. We, knowing our audiences and the norms of the platforms on which we exist, behave in certain ways online. Moderation has been around for as long as people developed online communities (with varying degrees of success). We already exist online as much as we do off. It seems the only thing left is to answer: would you rather be surveilled by one person you don’t know, or by everyone you do?&lt;/p&gt;</content><author><name></name></author><category term="writing" /><summary type="html">Here comes another project overview, this time a take on a fictional merging between the real cities of Stuttgart (in Germany) and Utrecht (in the Netherlands). While Superstudio’s Mindscapes, was like a Modernist fever dream, Metahavens’ Stadtstaat is technocrat’s fever dream, a town which has done away with traditional bureaucracy and government and has replaced it with a social network called “Trust,” which governs people by having them govern each other.</summary></entry><entry><title type="html">“Construct a Perfect Pentagon” by Thomas De Monchaux</title><link href="http://localhost:4000/2018/02/06/construct-a-perfect-pentagon-by-thomas-de-monchaux.html" rel="alternate" type="text/html" title="“Construct a Perfect Pentagon” by Thomas De Monchaux" /><published>2018-02-06T21:52:00-08:00</published><updated>2018-02-06T21:52:00-08:00</updated><id>http://localhost:4000/2018/02/06/construct-a-perfect-pentagon-by-thomas-de-monchaux</id><content type="html" xml:base="http://localhost:4000/2018/02/06/construct-a-perfect-pentagon-by-thomas-de-monchaux.html">&lt;p&gt;I had previously read another one of Thomas De Monchaux’s pieces, &lt;a href=&quot;https://nplusonemag.com/online-only/online-only/have-you-ever-had-an-intense-experience-of-mystical-communion-with-the-universe-life-god-etc/&quot;&gt;“Have You Ever Had an Intense Experience of Mystical Communion with the Universe, Life, God, etc?”&lt;/a&gt; (also published in &lt;em&gt;n+1&lt;/em&gt;) earlier last year. It was a review of a book on the life and work of architect Louis Kahn. That essay was one of the first essays I had read on architecture (I previously and foolishly tended to stay away from writings on architecture because I preferred to spend my time reading about graphic design), and the description of the field and the work made me realize exactly why designers today are so envious of the quality of dialogue architects and their critics are able to have.&lt;/p&gt;

&lt;p&gt;I’ve heard a lot of reasons (read: excuses) from designers (mostly graphic designers) as to why there isn’t a comparable body of criticism around design (mostly graphic design), and most of them naturally are comparisons between design and architecture. Design doesn’t have architecture’s age, its history, its patronage, etc, etc. You hear them so often you almost start to believe them. Then De Monchaux wrote “Construct a Perfect Pentagon,” which blows those discussions out of the water.&lt;/p&gt;

&lt;p&gt;I’ve read more than a few takes on Jesse Reed and Hamish Smyth’s Standards Manual practice, in which they revive and republish what amount to old brand guidelines which were assembled for laborers with no design training yet have achieved fetish object status among modern designers. What sets “Construct a Perfect Pentagon” apart from the rest is in its diligence, examining in detail not only a few of the actual manuals sold by Reed and Smyth but also their meanings—how they came to exist, what their construction meant for the institutions they represented, and how we as a country have now come to revere these old specification books and yet are content with the deterioration of our public works.&lt;/p&gt;

&lt;p&gt;It’s incredibly refreshing to read a piece of graphic design criticism from someone who is not a graphic designer (and the fact that it was published outside of a design trade publication is a nice change of pace as well). Even though these standards manual have already been the subject of much discussion, there’s so much that we miss out on when we focus on the design—in fact, the design might be one of the least important parts. If design is the method by which we give form to fictions, why would we examine only the form and not the fiction?&lt;/p&gt;</content><author><name></name></author><category term="writing" /><summary type="html">I had previously read another one of Thomas De Monchaux’s pieces, “Have You Ever Had an Intense Experience of Mystical Communion with the Universe, Life, God, etc?” (also published in n+1) earlier last year. It was a review of a book on the life and work of architect Louis Kahn. That essay was one of the first essays I had read on architecture (I previously and foolishly tended to stay away from writings on architecture because I preferred to spend my time reading about graphic design), and the description of the field and the work made me realize exactly why designers today are so envious of the quality of dialogue architects and their critics are able to have.</summary></entry><entry><title type="html">“The Tears of Donald Knuth” by David A. Banks</title><link href="http://localhost:4000/2018/02/05/the-tears-of-donald-knuth-by-david-a-banks.html" rel="alternate" type="text/html" title="“The Tears of Donald Knuth” by David A. Banks" /><published>2018-02-05T21:51:00-08:00</published><updated>2018-02-05T21:51:00-08:00</updated><id>http://localhost:4000/2018/02/05/the-tears-of-donald-knuth-by-david-a-banks</id><content type="html" xml:base="http://localhost:4000/2018/02/05/the-tears-of-donald-knuth-by-david-a-banks.html">&lt;p&gt;Reading this piece, I can’t help but to be reminded of a very eye-opening satirical talk of Bret Victor’s that I saw probably a few months ago called &lt;a href=&quot;http://worrydream.com/dbx/&quot;&gt;“The Future of Programming,”&lt;/a&gt; which plays on many of the same ideas explored here, although with a slightly different goal.&lt;/p&gt;

&lt;p&gt;The gist of the essay is this: Donald Knuth once read a paper called “The History of the History of Software” by computing historian Martin Campbell-Kelly which upset him so much as to move him not only to tears but also to deliver an impassioned speech titled “Let’s Not Dumb Down the History of Computing.” Knuth’s issue with the paper was that it remained mostly non-technical and therefore was not useful to computer scientists, who needed this history most of all. Banks uses the rest of this letter to explain why Knuth’s ire is deserved but misguided.&lt;/p&gt;

&lt;p&gt;While Banks is concerned with pushing for more historians of computing in order to computer scientists’ understandings of the field, Victor in his talk makes the case for studying the history of computing (although really in his case it’s closer to the history of software) so that we might not become too settled into our understandings of what software is and might be. He cites the 1960s as an extremely fertile time in computer science, when the field was still so new that computer scientists had no idea what it was and so had no restrictions in their minds as to what it could be.&lt;/p&gt;

&lt;p&gt;I think there’s much to be said about studying the history of human-computer interaction as well. I remember being in my HCI class sophomore year and being blown away by Douglas Engelbart’s &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Mother_of_All_Demos&quot;&gt;“Mother of All Demos,”&lt;/a&gt; in which he introduced to the world windows, the mouse, hypertext, video conferencing, and a collaborative text editor (among many things). So many of the things shown during that demonstrations are now commonplace in computers today and form the basis for our interface with computing. But why is our understanding of HCI so often defined in terms of these devices which have existed for almost 50 years?&lt;/p&gt;

&lt;p&gt;There have been incredible explorations into novel forms of interaction. Richard Bolt created the &lt;a href=&quot;https://www.youtube.com/watch?v=0Pr2KIPQOKE&quot;&gt;Put-That-There&lt;/a&gt; system which used voice and gestures as the primary method for interaction with a computer which was an entire room (this idea of room-as-computer is something being explored in Victor’s &lt;a href=&quot;https://dynamicland.org&quot;&gt;Dynamicland&lt;/a&gt;, although as far as I know the similarities mostly end there).&lt;/p&gt;

&lt;p&gt;I think this discussion around the value of studying history of a technical field is just another example of the contributions that the humanities can have toward the sciences. Some primary examples I can think of are Jeffrey Bardzell’s papers on HCI which brings in ideas from feminism, aesthetics, and critical theory. I’m also reminded of Mark Marino’s call for close readings of software in “Critical Code Studies” and Nick Monfort’s &lt;em&gt;10 Print,&lt;/em&gt; which manifests this practice. I hope, for Donald Knuth’s sake, that we get more historical writing that fits this bill too.&lt;/p&gt;</content><author><name></name></author><category term="writing" /><summary type="html">Reading this piece, I can’t help but to be reminded of a very eye-opening satirical talk of Bret Victor’s that I saw probably a few months ago called “The Future of Programming,” which plays on many of the same ideas explored here, although with a slightly different goal.</summary></entry><entry><title type="html">“Engineered for Dystopia” by David A. Banks</title><link href="http://localhost:4000/2018/02/03/engineered-for-dystopia-by-david-a-banks.html" rel="alternate" type="text/html" title="“Engineered for Dystopia” by David A. Banks" /><published>2018-02-03T21:52:00-08:00</published><updated>2018-02-03T21:52:00-08:00</updated><id>http://localhost:4000/2018/02/03/engineered-for-dystopia-by-david-a-banks</id><content type="html" xml:base="http://localhost:4000/2018/02/03/engineered-for-dystopia-by-david-a-banks.html">&lt;p&gt;I often feel like I take issue with many of the same things about engineering that I do with design. Too often people push engineering as an objective endeavor (analogous to the design mantra “form follows function”), and so we are often fed a narrative that the systems built by engineers are somehow objective, just a solution to a problem. There’s also a general lack of critical discussion around engineering, which probably happens because for many of the same reasons as in design (e.g. the industry is often very closed-off, with the exception of open-source projects developed and maintained by these companies; the people who would be critiquing have obvious bias; most engineering does not lend itself to fruitful criticism; etc, etc).&lt;/p&gt;

&lt;p&gt;Science, of course, is a field founded on critical inquiry. As we move further away from the practical and approach the theoretical, we come more and more into ideas which must be exhaustively proven before they are accepted. And while you can prove statements about engineering, these statements are typically proven through empirical evidence rather than, say, induction. That is, they must first and foremost demonstrate their utility, which makes sense in the context of engineering, but also seems to suggest that, like in design, it makes the practice of criticism less interesting.&lt;/p&gt;

&lt;p&gt;One other thing I will say about engineering as far as its similarities to design goes is that we should not be surprised to often find that engineering is employed by people with power in devious ways. Engineers, like designers, are hired by wealthy people for their ability to create systems which help maintain the status quo. And especially in the age of software, the barrier to entry in this field is drastically low—all it takes is a laptop and an internet connection. This suggests that now, more than ever, is the time for us to be critical about the roles and responsibilities of engineers and how we should view their contributions.&lt;/p&gt;</content><author><name></name></author><category term="writing" /><summary type="html">I often feel like I take issue with many of the same things about engineering that I do with design. Too often people push engineering as an objective endeavor (analogous to the design mantra “form follows function”), and so we are often fed a narrative that the systems built by engineers are somehow objective, just a solution to a problem. There’s also a general lack of critical discussion around engineering, which probably happens because for many of the same reasons as in design (e.g. the industry is often very closed-off, with the exception of open-source projects developed and maintained by these companies; the people who would be critiquing have obvious bias; most engineering does not lend itself to fruitful criticism; etc, etc).</summary></entry></feed>