<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-01-08T23:10:36-06:00</updated><id>http://localhost:4000/</id><title type="html">josh shi</title><subtitle>josh shi cool man funny website haha</subtitle><entry><title type="html">“The Creative Act” by Marcel Duchamp</title><link href="http://localhost:4000/2018/01/08/the-creative-act-by-marcel-duchamp.html" rel="alternate" type="text/html" title="“The Creative Act” by Marcel Duchamp" /><published>2018-01-08T17:39:00-06:00</published><updated>2018-01-08T17:39:00-06:00</updated><id>http://localhost:4000/2018/01/08/the-creative-act-by-marcel-duchamp</id><content type="html" xml:base="http://localhost:4000/2018/01/08/the-creative-act-by-marcel-duchamp.html">&lt;p&gt;Here’s a brief but interesting essay to think about by Marcel Duchamp in which he discusses the role of the artist and the spectator (viewers, critics, historians) in what he describes as “the two poles of creation” in the creative process. Near the beginning, he makes a rather bold assertion about the artist:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To all appearances, the artist acts like a mediumistic being who, from the labyrinth beyond space and time, seeks his way out to a clearing.&lt;/p&gt;

  &lt;p&gt;If we give the attributes of a medium to the artist, we must then deny him the state of consciousness on the esthetic plane about what he is doing or why he is doing it. All his decisions in the artistic execution of the work rest with pure intuition and cannot be translated into a self-analysis, spoken or written, or even thought out.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;He quotes a line from T.S. Eliot in an essay, “Tradition and the Individual Talent,” where Eliot says, “the more perfect the artist, the more completely separate in him will be the man who suffers and the mind which creates.”&lt;/p&gt;

&lt;p&gt;If this definition of the artist is hard to swallow, that’s because it is. After all, it doesn’t really seem reasonable for a person to create &lt;em&gt;anything&lt;/em&gt; significant without deliberation and intentionality. Following this definition, how could an artist ever produce art? Duchamp recognizes this dissonance and proceeds to talk about what he refers to as the “art coefficient,” the difference between what the author meant to create, what has actually been created, and how the viewer interprets the work (I’ve heard Elliot Earls describe this same concept as “slippage” in one of his &lt;a href=&quot;https://www.youtube.com/channel/UC_1qlsIrMnixjorbUg4k3RA/featured&quot;&gt;Studio Practice videos&lt;/a&gt;). Duchamp says the artist is not conscious of this difference. This is where the viewer comes in—the creative act does not end once the artist finishes a piece, but instead extends into the viewing, when a spectator completes the art coefficient (which until now is in its raw state, or &lt;em&gt;à l’état brut&lt;/em&gt;) by interpreting a work. It’s through this process that the spectator judges the piece (i.e. critiques) and transmutes the ideas of the artist into ideas of the viewer.&lt;/p&gt;

&lt;p&gt;I think there’s a lot to unpack in this relatively short essay, but one of the things that I first began to think about was how prevalent the tenants of Modernism played into Duchamp’s ideas. An interesting omission from this essay is any acknowledgement of talent or skill in the creative process (in fact, the thought of an artist developing his or her skill or practicing a certain technique almost seems like it would go against his concept of an artist), and instead insisting that the ideal artist would act without awareness.&lt;/p&gt;

&lt;p&gt;This is where Modernism diverges from previous understandings of art art. After all, that’s how art used to be made—if you wanted to paint a tree, you’d have to go out and study the leaves. If you wanted to paint a field, you’d have to go out and learn about perspective to capture the field. Here, however, we start to understand that art is no longer just about representing something tangible, but about being a conduit for the artist’s mind. The mind is the interesting part here, not the trees or the field. Art is a medium for communicating ideas, emotions, or anything else which escapes words. Artists must inexorably find some medium to transfer these ideas through, but it’s still possible to be mindful of the limitations that come from manifesting thoughts.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Postscript:&lt;/em&gt; After writing this response it occurred to me that there may be another profession which fits the bill for Duchamp’s ideal “unaware practitioner:” the athlete. In one of my favorite David Foster Wallace essays, “How Tracy Austin Broke My Heart,” DFW contemplates why we so often ridicule athletes for being unable to speak gracefully about their sport, often reciting what we view as clichés or trite, vacuous comments in interviews or in their memoirs. Perhaps, he says, the reason why these athletes speak this way (e.g. “just gotta keep your eye on the ball,” “we just have to play our best and work together”) because to them these phrases are comprehensive (in DFW’s words, “exhaustively descriptive”). These athletes are not only naturals, but they’ve also dedicated so much time to practicing and perfecting these movements that they’ve come to understand them as the truth, the whole truth, and nothing but the truth. They don’t think deeply or profoundly about these topics because to them there just isn’t anything to think—they just &lt;em&gt;do&lt;/em&gt;. I think this fits perfectly with what Duchamp is searching for: a being who operates in a state of semi-consciousness, their body simply a canvas through which they practice their craft. As DFW states it, “those who receive and act out the gift of athletic genius must, perforce, be blind and dumb about it—and not because blindness and dumbness are the price of the gift, but because they are its essence.”&lt;/p&gt;</content><author><name></name></author><summary type="html">Here’s a brief but interesting essay to think about by Marcel Duchamp in which he discusses the role of the artist and the spectator (viewers, critics, historians) in what he describes as “the two poles of creation” in the creative process. Near the beginning, he makes a rather bold assertion about the artist:</summary></entry><entry><title type="html">“Art Criticism” by Clement Greenberg</title><link href="http://localhost:4000/2018/01/06/art-criticism.html" rel="alternate" type="text/html" title="“Art Criticism” by Clement Greenberg" /><published>2018-01-06T12:51:00-06:00</published><updated>2018-01-06T12:51:00-06:00</updated><id>http://localhost:4000/2018/01/06/art-criticism</id><content type="html" xml:base="http://localhost:4000/2018/01/06/art-criticism.html">&lt;p&gt;“Art Criticism” is a short and straightforward piece by Clement Greenberg in which he reminds us what art criticism is and isn’t in the face of changing attitudes and conceptions about art. If you’ve read Greenberg’s “Avant-Garde and Kitsch” or “Modernist Painting,” you’ll know that he was kept very busy during the early twentieth century with thinking about how different parts of the art world had to change due to the rise of Modernism. “Art Criticism” is one such example in which Greenberg explores in very simple terms the purpose behind criticism, aesthetics, and value judgments—what most of us think of as “taste.”&lt;/p&gt;

&lt;p&gt;In this essay, Greenberg essentially says that because Modernism had come and broken everyone’s previous understandings and ideas about art, critics of his time started believing that the traditional ways of evaluating art (i.e. aesthetics) had been invalidated as well. They then began to pass other things off as criticism, like description, analysis, or interpretation. They started to talk &lt;em&gt;around&lt;/em&gt; the piece rather than &lt;em&gt;about&lt;/em&gt; it, and would discuss things like the social/political/economic contexts of its making. But while these things are interesting and do provide value in our understanding of a piece, Greenberg plainly says that they are not criticism (although things like description, analysis and interpretation do carry with them implicit value judgments, they are not meant to communicate or justify those judgments). Everyone, when they experience a work of art, has some reaction to it and makes some value judgment on it, whether implicit or explicit. However, not everyone is able to verbalize their judgments (and not everyone is even fully conscious of their judgments). Critics, however, are obligated to communicate their value judgments.&lt;/p&gt;

&lt;p&gt;Granted, the judgment is the most difficult part of art criticism. It’s easy to sound knowledgable or authoritative about something when you’re stating facts. To make a judgment, however, to say that a work is &lt;em&gt;good&lt;/em&gt; or &lt;em&gt;bad&lt;/em&gt;, is hard. These subjective measures open the door for disagreement, and it’s hard to justify why you like or dislike something (it also makes it very easy for you to be on the &lt;a href=&quot;http://query.nytimes.com/mem/archive-free/pdf?res=9D02E2D71131E233A2575BC0A9669D946096D6CF&amp;amp;mcubz=3&quot;&gt;wrong side of history&lt;/a&gt;). Especially during a time like the early 1900s when everything about art seemed to be changing so quickly, it would be easy to find solace in facts rather than judgments.&lt;/p&gt;

&lt;p&gt;These difficulties, however, are what make art criticism meaningful and worthwhile. To discuss and write about art as art, not as a document of history or philosophy, is to recognize our relationship with it and the effect it can have on us. The role of the critic is then to put into words his or her experience with a given piece of art, and it is through that criticism that we not only come to understand another person’s perspective, but can also understand our own reactions more deeply. But in order to do this, we must be honest and direct with ourselves about what we feel and how we evaluate our experience. We can only truly appreciate art when we take it for what it is.&lt;/p&gt;</content><author><name></name></author><summary type="html">“Art Criticism” is a short and straightforward piece by Clement Greenberg in which he reminds us what art criticism is and isn’t in the face of changing attitudes and conceptions about art. If you’ve read Greenberg’s “Avant-Garde and Kitsch” or “Modernist Painting,” you’ll know that he was kept very busy during the early twentieth century with thinking about how different parts of the art world had to change due to the rise of Modernism. “Art Criticism” is one such example in which Greenberg explores in very simple terms the purpose behind criticism, aesthetics, and value judgments—what most of us think of as “taste.”</summary></entry><entry><title type="html">“Trash, Art, and the Movies” by Pauline Kael</title><link href="http://localhost:4000/2018/01/02/trash-art-and-the-movies-by-pauline-kael.html" rel="alternate" type="text/html" title="“Trash, Art, and the Movies” by Pauline Kael" /><published>2018-01-02T20:49:00-06:00</published><updated>2018-01-02T20:49:00-06:00</updated><id>http://localhost:4000/2018/01/02/trash-art-and-the-movies-by-pauline-kael</id><content type="html" xml:base="http://localhost:4000/2018/01/02/trash-art-and-the-movies-by-pauline-kael.html">&lt;p&gt;If you don’t know who Pauline Kael was, I recommend giving her &lt;a href=&quot;https://en.wikipedia.org/wiki/Pauline_Kael&quot;&gt;Wikipedia page&lt;/a&gt; a quick pass. She was and continues to be an incredibly divisive figure, and during her 23-year tenure at the &lt;em&gt;New Yorker&lt;/em&gt;, she established herself as one of the influential voices of film criticism to date. Her opinions on movies often went contrary to those of her contemporaries and the general public (for instance, she panned &lt;em&gt;The Sound of Music&lt;/em&gt;, &lt;em&gt;2001: A Space Odyssey&lt;/em&gt;, and &lt;em&gt;West Side Story&lt;/em&gt; while praising films like &lt;em&gt;The Warriors&lt;/em&gt;), and she regularly butted heads with both her colleagues at the &lt;em&gt;New Yorker&lt;/em&gt; as well as people in the movie industry. Roger Ebert &lt;a href=&quot;https://www.rogerebert.com/rogers-journal/knocked-up-at-the-movies&quot;&gt;said of her&lt;/a&gt;, “Pauline had no theory, no rules, no guidelines, no objective standards. You couldn’t apply her ‘approach’ to a film. With her it was all personal.” While I agree it’s clear that films were deeply personal to her, I would argue that she did have rules, theory, and guidelines behind her opinions. They just might not be what we expect.&lt;/p&gt;

&lt;p&gt;Movies are probably the second-easiest media after television to consume. When you watch a movie in a theater, the screen is the only thing you see, the theater speakers the only thing you hear. You don’t so much give it your attention as it is demanded from you, and in return it saturates your senses. This, Kael says, makes movies “the most total and encompassing art form we have,” where “[our] reactions can seem the most personal and, maybe the most important, imaginable.”&lt;/p&gt;

&lt;p&gt;But movies can also be (and to be fair, it’s likely that the majority of movies are) utter trash, i.e. not good.” And “good” means a specific thing to Kael: “a good movie can take you out of your dull funk and the hopelessness that so often goes with slipping into a theatre; a good movie can make you feel alive again, in contact, not just lost in another city. Good movies make you care, make you believe in possibilities again.” Good movies provide escapism. They make use of their inherent totality and immerse their viewers to make them feel something. This definition of “goodness” seems very simple, but the way it’s achieved can be very complex. After all, movies require the careful orchestration of moving picture and sound, and the amount and diversity of work that goes into producing one makes it near-impossible for one person (e.g. the director) to have control over it all. But because of this, movies can become good, or even ascend to become “art,” in any number of ways. 
One of the most interesting parts of this essay is the ramifications of how Kael interprets movie art.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Movie art is not the opposite of what we have always enjoyed in movies, it is not to be found in a return to that official high culture, it is what we have always found good in movies only more so. It’s the subversive gesture carried further, the moments of excitement sustained longer and extended into new meanings.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That is, for a movie to be art it must make us feel the things we felt in good movies, but in new ways. It requires a sort of novelty, an addition onto our lives.&lt;/p&gt;

&lt;p&gt;This suggests to me that there are two levels of art. There is art on the personal level, where a movie provides us as individuals a new way of seeing or understanding the world. There’s also, for lack of a better word, something of a “cultural” art, the contribution that a movie makes not to a single person but to a larger dialogue around film as a practice. But it’s the personal art that makes us fall in love with the movies, when we watch a movie and feel like we see a part of ourselves that we always knew was there but could never quite articulate, the understanding that someone else out there must feel that same thing too.&lt;/p&gt;

&lt;p&gt;The personal understanding of movies as art also leads Kael to express that our definitions of art are malleable. This explains why Ebert also said of her, “She’s accused of being inconsistent and contradicting herself. Directors would fall in and out of favor. With her there was no possibility of inconsistency, because she always wrote about what she felt right now.”&lt;/p&gt;

&lt;p&gt;All of a sudden, it becomes clear why Kael was so unconcerned with falling in line with her fellow critics, why her writing style is so raw and unfiltered, why she fought so hard for her opinions to be printed in their unedited and uncut form. If the point of a good movie is to show you something new, how could anyone else do that for you? No two viewings are the same, not even by the same person. There’s no use in trying to coming to agreement on two inherently different opinions.&lt;/p&gt;

&lt;p&gt;That doesn’t mean that it’s not valuable to have critics or opinions at all, however. Critics provide invaluable contributions to the ongoing discourse around art. Their role is not to prescribe viewpoints, but to further expand the impact of a work itself and how it changes the way we understand ourselves and our world. Pauline Kael doesn’t care about whether we agree with her because her reviews are not persuasive arguments. They’re a documentation of her experience, not something we should try to match but something we should accept. As long as her work is used as the starting point for further conversations on movies, she has done her job. She’s not looking to project her views onto anyone else. Instead, we should use her writing to keep us thinking about our own relationships with movies, both trash and art.&lt;/p&gt;</content><author><name></name></author><summary type="html">If you don’t know who Pauline Kael was, I recommend giving her Wikipedia page a quick pass. She was and continues to be an incredibly divisive figure, and during her 23-year tenure at the New Yorker, she established herself as one of the influential voices of film criticism to date. Her opinions on movies often went contrary to those of her contemporaries and the general public (for instance, she panned The Sound of Music, 2001: A Space Odyssey, and West Side Story while praising films like The Warriors), and she regularly butted heads with both her colleagues at the New Yorker as well as people in the movie industry. Roger Ebert said of her, “Pauline had no theory, no rules, no guidelines, no objective standards. You couldn’t apply her ‘approach’ to a film. With her it was all personal.” While I agree it’s clear that films were deeply personal to her, I would argue that she did have rules, theory, and guidelines behind her opinions. They just might not be what we expect.</summary></entry><entry><title type="html">200 Essays</title><link href="http://localhost:4000/2018/01/01/200-essays.html" rel="alternate" type="text/html" title="200 Essays" /><published>2018-01-01T20:51:00-06:00</published><updated>2018-01-01T20:51:00-06:00</updated><id>http://localhost:4000/2018/01/01/200-essays</id><content type="html" xml:base="http://localhost:4000/2018/01/01/200-essays.html">&lt;div&gt;
    &lt;p&gt;Attempting to read 200 essays and write 200 responses in 52 weeks. Find links to the essays &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1TV0BHvKXcsAeVzIfUON7zVkkmC_gkMfu3ufNPSqv6ds/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. &lt;a href=&quot;https://twitter.com/unfollowjoshshi&quot; target=&quot;_blank&quot;&gt;Tweet&lt;/a&gt; at me with suggestions (I need them).&lt;/p&gt;
    &lt;p&gt;See the posts below:&lt;/p&gt;
    &lt;ol reversed=&quot;&quot;&gt;
    
        
            &lt;li&gt;
                &lt;p class=&quot;post-title&quot;&gt;&lt;a href=&quot;/2018/01/08/the-creative-act-by-marcel-duchamp.html&quot;&gt;“The Creative Act” by Marcel Duchamp&lt;/a&gt;&lt;/p&gt;
                &lt;p class=&quot;post-date&quot;&gt;January 08, 2018&lt;/p&gt;
            &lt;/li&gt;
        
    
        
            &lt;li&gt;
                &lt;p class=&quot;post-title&quot;&gt;&lt;a href=&quot;/2018/01/06/art-criticism.html&quot;&gt;“Art Criticism” by Clement Greenberg&lt;/a&gt;&lt;/p&gt;
                &lt;p class=&quot;post-date&quot;&gt;January 06, 2018&lt;/p&gt;
            &lt;/li&gt;
        
    
        
            &lt;li&gt;
                &lt;p class=&quot;post-title&quot;&gt;&lt;a href=&quot;/2018/01/02/trash-art-and-the-movies-by-pauline-kael.html&quot;&gt;“Trash, Art, and the Movies” by Pauline Kael&lt;/a&gt;&lt;/p&gt;
                &lt;p class=&quot;post-date&quot;&gt;January 02, 2018&lt;/p&gt;
            &lt;/li&gt;
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
    &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Attempting to read 200 essays and write 200 responses in 52 weeks. Find links to the essays here. Tweet at me with suggestions (I need them). See the posts below: “The Creative Act” by Marcel Duchamp January 08, 2018 “Art Criticism” by Clement Greenberg January 06, 2018 “Trash, Art, and the Movies” by Pauline Kael January 02, 2018</summary></entry><entry><title type="html">Pyrus</title><link href="http://localhost:4000/2018/01/01/pyrus.html" rel="alternate" type="text/html" title="Pyrus" /><published>2018-01-01T17:32:00-06:00</published><updated>2018-01-01T17:32:00-06:00</updated><id>http://localhost:4000/2018/01/01/pyrus</id><content type="html" xml:base="http://localhost:4000/2018/01/01/pyrus.html">&lt;p&gt;Over the past few quarters, my partner and I have been working on a research project focused on learning more about how we might design a collaborative coding game which helps novice computer science students develop their programming problem-solving skills. Our system is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Pear&quot;&gt;Pyrus&lt;/a&gt; and the project is advised by Nell O’Rourke as part of a class called Design, Technology and Research. We recently submitted a paper to CHI 2018’s Student Research Competition, which focuses mostly on the design arguments for our system and our research contributions, but didn’t give us a chance to talk about some of the interesting technical challenges we faced. In this post, I’ll be going over how we handled one interesting technical hurdle by using Redux on the back-end to synchronize game state between a server and multiple clients.&lt;/p&gt;

&lt;h2 id=&quot;the-challenge&quot;&gt;The Challenge&lt;/h2&gt;
&lt;p&gt;To provide some context, our system consists of a game which has a few standard game-like components, like a board and a deck of cards. In this game, players can take actions that mutate the state of the game across multiple components, e.g. drawing a card would pop a card off the top of the deck and push it onto the player’s hand. All these changes need to be propagated to all clients in real time and must be handled the same way to ensure that state changes are consistent.&lt;/p&gt;

&lt;p&gt;We went back and forth on a few different methods for managing state, but we eventually realized that Redux was probably the best way to go for a couple of reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;From a bit of digging online, we realized the &lt;a href=&quot;https://gamedev.stackexchange.com/questions/28820/how-do-i-sync-multiplayer-game-state-more-efficiently-than-full-state-updates&quot;&gt;typical&lt;/a&gt; way to keep state in sync between a server (the source of truth) and multiple clients in multiplayer games is to keep game state stored in a well-defined object model and &lt;em&gt;transmit all changes to game state as discrete events&lt;/em&gt;. This is pretty much Redux’s bread and butter.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Using Redux on the back-end meant we could reuse much of our Redux code (e.g. actions, reducers, etc) on the front-end. Not only did it save us a lot of time from not having to write and maintain two sets of code that did the same thing, it also ensured that all actions were handled in exactly the same way between client and server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We also needed the ability to intercept actions (e.g. in order to log them to a file) as they were dispatched. Redux allows you to do this really well through middleware.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But there was one sticking point: Redux is usually paired with a view library like React, and we weren’t able to find much information online about Redux being used on the server. This meant we had our work cut out for us as far as figuring out the best way to organize our application.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Our solution was to create a Game class which configures a Redux store in its constructor. Once a Game object is instantiated, its store becomes a member variable of that object, i.e. accessible through &lt;code class=&quot;highlighter-rouge&quot;&gt;this._store&lt;/code&gt;. This is what we use in place of traditional member variables to mutate the state of the game. Now any time we want to dispatch an action, we can simply call &lt;code class=&quot;highlighter-rouge&quot;&gt;this._store.dispatch(someActionCreator());&lt;/code&gt; from within the Game itself.&lt;/p&gt;

&lt;p&gt;Being able to do this is nice because it affords us a few benefits:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;We can expose a very simple API for interacting with the Game object. Outside code can call methods like &lt;code class=&quot;highlighter-rouge&quot;&gt;game.start()&lt;/code&gt; instead of dispatching actions directly on a store themselves. (This abstraction carries over to all other objects, like our object for Deck or Board, since we construct those from the Game object we pass down the store to them too.) Additionally, if we ever need to fire multiple actions in sequence, we can just do that in a very straightforward way by simply writing out those dispatches one after another. No messing with thunks necessary.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We can also keep all the business logic in the classes. There are a lot of checks in place to make sure that the game doesn’t end up in an invalid state, e.g. by allowing an inactive player to make a move or by executing an action that was actually illegal. Without a class to wrap all these checks around, they would probably all end up in the action. This object-oriented approach makes our code much easier to understand.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This also provides an easy, reliable way to access member variables. Instead of keeping a laundry list of member variables that we mutate ourselves, we define getters which simply return the corresponding attribute via a call to  &lt;code class=&quot;highlighter-rouge&quot;&gt;this.store.getState().attrib&lt;/code&gt; within the class. This means we can avoid storing redundant information.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To take a look at how this works in practice, here’s some annotated example code (the following snippet is close to our implementation, but with some simplifications made for illustration purposes):&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rootReducer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../../reducers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gameStart&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../../actions/game'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../Board'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Game&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// the constructor initializes the Redux store and puts it&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// in a member variable of the Game object&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rootReducer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// the &quot;board&quot; here is an object which encapsulates all&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// &quot;physical&quot; game components, e.g. players and the deck.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// all components get passed the store&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// this getter exposes a clean way for outside code to get &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// information from the Redux store without having to know&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// the actual layout of the store tree&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// returns whether the game successfully started&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// a check to make sure we don't end up in an invalid&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// state (i.e. starting the game when we shouldn't be.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'GAME_STATUS_INIT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// to mutate state, we dispatch actions to our this._store&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gameStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// we can easily dispatch multiple subsequent actions&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;players&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// like status above, board.players is actually a getter&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// that fetches an attribute from the state tree&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;players&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// bonus: the deck.draw function called here also&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// dispatches multiple actions to the store. since&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// we passed in the store in the board, which in turn&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// passes it to the deck, we can implement the draw &lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// function in the deck and provide a much simpler&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// abstraction to use here&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPlayerHand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As mentioned above, using the same representation of game state on the server and the client made managing updates between clients really easy. We basically set up a WebSocket connection between the server and all the clients whenever a new client joins a game. On that connection, the server sends over the JSON representation of the current game state. Once that connection is established, the client will send a message to the server whenever the player performs an action (the &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON.stringify()&lt;/code&gt;’d Redux action). The server takes each message, parses it, does all the necessary checking, and handles that action. Attached to the store on the back-end is some custom middleware that intercepts every dispatched action and broadcasts it to all clients listening on that WebSocket connection. Those clients then receive those incoming WebSocket messages and dispatch each action on their own stores. This way, we guarantee that every state mutation the server applies is sent to the client as well.&lt;/p&gt;

&lt;p&gt;This was an interesting problem to think through and it definitely took some time before we fell into a comfortable paradigm with it, but in the end I think it worked out really well. The ease of moving between the front- and back-end codebases, possible because that were both in Javascript they shared almost all their Redux code, was actually tremendously helpful.&lt;/p&gt;

&lt;p&gt;I was thinking about abstracting some of the work we’ve done into a generalizable framework for writing multiplayer games in a full Javascript stack, but then a friend of mine recently pointed me to &lt;a href=&quot;https://github.com/google/boardgame.io&quot;&gt;boardgame.io&lt;/a&gt;. At time of writing it’s pretty new, but it provides a good layer of abstraction over all that state-management stuff and is conceptually very similar to what I outlined above. Check it out if you’re interested in a solution similar to what I’ve discussed that’s ready out-of-the-box.&lt;/p&gt;</content><author><name></name></author><summary type="html">Over the past few quarters, my partner and I have been working on a research project focused on learning more about how we might design a collaborative coding game which helps novice computer science students develop their programming problem-solving skills. Our system is called Pyrus and the project is advised by Nell O’Rourke as part of a class called Design, Technology and Research. We recently submitted a paper to CHI 2018’s Student Research Competition, which focuses mostly on the design arguments for our system and our research contributions, but didn’t give us a chance to talk about some of the interesting technical challenges we faced. In this post, I’ll be going over how we handled one interesting technical hurdle by using Redux on the back-end to synchronize game state between a server and multiple clients.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/pyrus/pyrus.png" /></entry><entry><title type="html">Ascii Waves</title><link href="http://localhost:4000/2017/11/18/ascii-waves.html" rel="alternate" type="text/html" title="Ascii Waves" /><published>2017-11-18T08:19:00-06:00</published><updated>2017-11-18T08:19:00-06:00</updated><id>http://localhost:4000/2017/11/18/ascii-waves</id><content type="html" xml:base="http://localhost:4000/2017/11/18/ascii-waves.html"></content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/asciiwave/ascii-wave.png" /></entry><entry><title type="html">NURJ Vol. 12</title><link href="http://localhost:4000/2017/06/18/nurj-vol-12.html" rel="alternate" type="text/html" title="NURJ Vol. 12" /><published>2017-06-18T20:15:04-05:00</published><updated>2017-06-18T20:15:04-05:00</updated><id>http://localhost:4000/2017/06/18/nurj-vol-12</id><content type="html" xml:base="http://localhost:4000/2017/06/18/nurj-vol-12.html">&lt;p&gt;You can see the contents of the 2016-17 edition of the NURJ &lt;a href=&quot;http://www.thenurj.com/issues/vol-12&quot;&gt;here&lt;/a&gt;.
&lt;img src=&quot;/assets/images/nurj12/nurj_cover.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">You can see the contents of the 2016-17 edition of the NURJ here.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/nurj12/nurj_cover.jpg" /></entry><entry><title type="html">thenurj.com</title><link href="http://localhost:4000/2017/04/22/the-nurj-com.html" rel="alternate" type="text/html" title="thenurj.com" /><published>2017-04-22T20:15:04-05:00</published><updated>2017-04-22T20:15:04-05:00</updated><id>http://localhost:4000/2017/04/22/the-nurj-com</id><content type="html" xml:base="http://localhost:4000/2017/04/22/the-nurj-com.html">&lt;p&gt;Recently, I’ve been working on creating the website for the Northwestern Undergraduate Research Journal (NURJ). The project spanned a few months and has taught me a lot, especially about making technical decisions with non-technical people in mind. The website is live at &lt;a href=&quot;http://www.thenurj.com&quot;&gt;thenurj.com&lt;/a&gt; and you can find the code behind it on &lt;a href=&quot;https://github.com/nurj/nurj&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;The previous iteration of our website was built on Squarespace a few years before I joined the staff. This made it really easy for them to get a site off the ground, but it made it extremely difficult to add new content and train new members to use the system, since many different pages had to be updated whenever new content was uploaded.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/thenurj.com/nurj-squarespace.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On another point, we had recently updated the look of our print journal and the website no longer reflected our identity. We took this as an opportunity for a &lt;em&gt;tabula rasa&lt;/em&gt; and build a new site from the ground up tailored exactly to our needs.&lt;/p&gt;

&lt;h2 id=&quot;our-approach&quot;&gt;Our Approach&lt;/h2&gt;
&lt;p&gt;I enlisted the help of our Art Director &lt;a href=&quot;http://www.florencefu.com&quot;&gt;Florence Fu&lt;/a&gt;, and we started thinking about the purpose behind the NURJ’s web presence.&lt;/p&gt;

&lt;p&gt;To provide some background, the NURJ is a student publication which features undergraduate research at Northwestern University. Our flagship, the print journal, comes out once a year, at the end of Spring quarter, and comprises the senior theses from the previous academic year which were selected to be the best in their departments, as well as a few features on faculty at Northwestern who do interesting research. The website carries not only the content which goes in our print journal but also theses which undergraduates submit to us throughout the year and other features we write on university faculty.&lt;/p&gt;

&lt;p&gt;One of our most important realizations was that our journal is not a typical student publication. There are a few things that set it apart from other student pubs, like magazines or daily newspapers:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We primarily publish theses written by undergraduate students. These pieces can be intellectually dense and run anywhere from 5,000-10,000 words.&lt;/li&gt;
  &lt;li&gt;We also don’t come out with new content as often as other publications. We publish around five times a year, with the biggest release (the theses which also go in our print journal) coming out at the end of the academic year.&lt;/li&gt;
  &lt;li&gt;Theses in general are pretty complex. They have a lot of metadata associated with them (you can check out the full schema for a thesis &lt;a href=&quot;https://github.com/nurj/nurj/blob/master/EDITING.md#thesis&quot;&gt;here&lt;/a&gt;) and have certain requirements, like citations which go along with specific sentences.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This made our priorities a little different from a typical publication as far as displaying content and navigation on the site was concerned. For example, while it might be more important for a newsmagazine to display the most recent or most popular articles, we didn’t feel like that applied to us, since the most “important” pieces we published were usually those that went in the print issue. We wanted that to be the focus when landing on the website, and for other content to appear after that.&lt;/p&gt;

&lt;p&gt;Another top priority for us was readability. Since our theses were so long-form, it was important to provide a comfortable reading experience. For that reason, we wanted to display citations to theses alongside the text if the author had chosen to use inline rather than parenthetical citations. This also meant that we would need to pay extra attention to typography.&lt;/p&gt;

&lt;p&gt;We also had a few things to consider from the operations side. Since we couldn’t count on always having a technically-minded person on our staff, we wanted to make sure that the barrier to entry for maintaining the site was as low as possible. This meant we needed a few things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A smooth editor so that even those without a technical background can upload and manage content on the site.&lt;/li&gt;
  &lt;li&gt;A hands-off website management experience that allowed us to make as many things configurable through the CMS as possible.&lt;/li&gt;
  &lt;li&gt;At the same time, the website should be as customizable as possible, yet the codebase should still be easy to understand and move around in. This meant &lt;em&gt;good documentation.&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Of course, we also wanted our website to be performant. If users were going to put in the time to read through a condensed thesis equivalent in length to 10 pages of material, we didn’t want them to have to wait for images or fonts to load (this is an issue especially because some theses use a lot of figures).&lt;/p&gt;

&lt;h2 id=&quot;the-result&quot;&gt;The Result&lt;/h2&gt;
&lt;p&gt;There were a lot of options we explored for our CMS, from something as stripped back as using a Github Pages-hosted Jekyll blog to using WordPress as the CMS/editor and serving content by fetching it from the &lt;a href=&quot;https://developer.wordpress.org/rest-api/&quot;&gt;WordPress API&lt;/a&gt;. Eventually, we settled on &lt;a href=&quot;https://prismic.io&quot;&gt;Prismic&lt;/a&gt;. Prismic provides an incredibly expressive format for defining custom content types, which made working with our content super easy. It’s also headless, so it allows us to use whatever back- and front-end that would be most convenient for us.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Aside: one thing I would’ve liked to explore but didn’t find out about until recently is using &lt;a href=&quot;https://www.drivecms.xyz&quot;&gt;Google Drive as a CMS&lt;/a&gt;, with documents written in a human-friendly markup format like &lt;a href=&quot;http://archieml.org&quot;&gt;ArchieML&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The actual website is powered by a pretty simple Node/Express app which uses the Prismic API to fetch content, then fills out Pug templates. We really liked the simplicity of a project with this structure–it’s very easy for someone with even a rudimentary knowledge of HTML/CSS to get on board and make changes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/thenurj.com/nurj.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The styles for the website are written in Sass. Both the Sass and the front-end Javascript follow the &lt;a href=&quot;https://gist.github.com/cuibonobo/16f555c0047ab80044cf&quot;&gt;Medium style guide&lt;/a&gt;. We try to keep files as short as possible by moving lots of things into components.&lt;/p&gt;

&lt;p&gt;Our copy is set with maximum legibility in mind. Titles and ancillary information use the typefaces we use in our print journal, loaded in as web fonts. To alleviate this burden on page load, we set our body copy in system fonts. The type is big and has a generous amount of leading, and is set on top of our background which is a little less harsh than pure white.&lt;/p&gt;

&lt;p&gt;There are still a few things that we’re still trying to figure out how to integrate into our workflow while maintaining ease of use (for example, compressing images before uploading them to the site). Even though we’re live, the website is definitely still a living, breathing project and we’re constantly making updates and pushing changes. If you just wanna check out the code, you can view it on &lt;a href=&quot;https://github.com/nurj/nurj&quot;&gt;Github&lt;/a&gt;, and if you’re interested in helping out feel free to shoot us an &lt;a href=&quot;http://www.thenurj.com/join&quot;&gt;message&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Recently, I’ve been working on creating the website for the Northwestern Undergraduate Research Journal (NURJ). The project spanned a few months and has taught me a lot, especially about making technical decisions with non-technical people in mind. The website is live at thenurj.com and you can find the code behind it on Github.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/thenurj.com/nurj.jpg" /></entry><entry><title type="html">slag</title><link href="http://localhost:4000/2017/02/08/slag.html" rel="alternate" type="text/html" title="slag" /><published>2017-02-08T19:15:04-06:00</published><updated>2017-02-08T19:15:04-06:00</updated><id>http://localhost:4000/2017/02/08/slag</id><content type="html" xml:base="http://localhost:4000/2017/02/08/slag.html">&lt;p&gt;&lt;em&gt;This was a project I worked on with my good buddy &lt;a href=&quot;http://www.brandonfujii.com&quot;&gt;Brandon Fujii&lt;/a&gt;. You can find the code for slag on Github &lt;a href=&quot;https://github.com/thehandsomepanther/slag&quot;&gt;here&lt;/a&gt; or see the npm module &lt;a href=&quot;https://www.npmjs.com/package/slag-cli&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Up until last year, I was doing all my work on a late 2008 13” Macbook with eight gigs of ram. It wasn’t impossible to get things done, but there were some tasks which took a long time or would start my fan spinning (like launching Illustrator or watching videos on YouTube).&lt;/p&gt;

&lt;p&gt;There was one thing, though, that absolutely destroyed me every time I opened up my laptop: Slack. I use Slack as my go-to communication app for student groups, which meant that I was liable to be signed into around five Slack teams at any point in time.&lt;/p&gt;

&lt;p&gt;The Slack desktop app is build on Github’s Electron, which in turn uses Chromium on the front-end. Chromium is &lt;a href=&quot;http://unix.stackexchange.com/questions/140153/how-to-reduce-chromes-virtual-memory-usage/338111#338111&quot;&gt;pretty&lt;/a&gt; &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=393395&quot;&gt;notorious&lt;/a&gt; for being a memory hog, so it’s not hard to see how that could affect desktop applications built on it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slag/activity-monitor.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a screenshot taken on my current work machine, a late 2014 15” Macbook Pro with 16 gigs of ram. At the time this screenshot was taken, I had Slack open for about three minutes. It’s already using up more than a gigabyte of my memory.&lt;/p&gt;

&lt;h2 id=&quot;our-approach&quot;&gt;Our Approach&lt;/h2&gt;

&lt;p&gt;From the beginning, the goal of slag was never to replace the Slack app completely–after all, the apps are great. What we wanted was a stripped down version of Slack that was much lighter. Something a user would be able to use on a day-to-day basis for the majority of Slack communications. A client that provided 80% of Slack’s functionality using 20% of the memory.&lt;/p&gt;

&lt;p&gt;This client would ideally provide the essentials of Slack as well as a small subset of the niceties. So while we first set out to implement the larger parts of the Slack app (the messaging, team and channel switching, etc), we also recognized that a lot of the joy of using Slack comes from the little things (emoji, @-mentions, /-commands), and we wanted to recreate those as well.&lt;/p&gt;

&lt;p&gt;Thankfully, Slack provides a very helpful &lt;a href=&quot;https://api.slack.com/web&quot;&gt;web API&lt;/a&gt; that had almost everything we needed to build out the messaging part. For the ncurses-like terminal GUI, we used a Javascript library called &lt;a href=&quot;https://github.com/chjj/blessed&quot;&gt;blessed&lt;/a&gt;, along with some components from &lt;a href=&quot;https://github.com/yaronn/blessed-contrib&quot;&gt;blessed-contrib&lt;/a&gt; and a few custom components as well.&lt;/p&gt;

&lt;h2 id=&quot;a-few-challenges&quot;&gt;A Few Challenges&lt;/h2&gt;

&lt;p&gt;/-commands like giphy aren’t exposed in Slack’s public web API, but by looking at network calls in a browser we were able to figure them out. @-mentions required some regex expressions to decipher and assemble. Supporting Slack’s colon-flanked &lt;code class=&quot;highlighter-rouge&quot;&gt;:emoji-code:&lt;/code&gt; was a little more of an exercise since Javascript pre-ES6 doesn’t support unicode, but we were able to get it working using surrogate pairs.&lt;/p&gt;

&lt;p&gt;With the actual client working, we then worked on improving usability. We put the client on &lt;a href=&quot;https://www.npmjs.com/package/slag-cli&quot;&gt;npm&lt;/a&gt; to make it easier to install. Since this was my first npm module, I learned a ton about publishing to npm and writing npm scripts.&lt;/p&gt;

&lt;p&gt;We also realized that adding tokens (i.e. providing credentials) for a team was still a pain. We added some useful commands (namely, &lt;code class=&quot;highlighter-rouge&quot;&gt;slag --set-token &amp;lt;token&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;slag --set-tokens &amp;lt;json-file&amp;gt;&lt;/code&gt;) to make that process easier as well as a helpful manual for new users.&lt;/p&gt;

&lt;h2 id=&quot;the-result&quot;&gt;The Result&lt;/h2&gt;

&lt;p&gt;When all was said and done, we ended up with a Slack terminal client that supported&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;messaging (no points there)&lt;/li&gt;
  &lt;li&gt;team switching (still no points, but a gold sticker for trying)&lt;/li&gt;
  &lt;li&gt;native notifications when someone @-mentioned you or sent you a DM&lt;/li&gt;
  &lt;li&gt;emoji and Slack’s emoji-code&lt;/li&gt;
  &lt;li&gt;/-commands&lt;/li&gt;
  &lt;li&gt;@-mentions&lt;/li&gt;
  &lt;li&gt;marking channels which had unread messages with an asterisk&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some things are a little more difficult to implement in a text-based GUI. Among those are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;images/videos&lt;/li&gt;
  &lt;li&gt;links (get printed out, but can run off the screen if they’re too long)&lt;/li&gt;
  &lt;li&gt;threads&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also measured our memory usage. This is for a slag client signed into four teams, although results should be comparable across more or fewer team sign-ins.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slag/memory.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;next-steps--retrospective&quot;&gt;Next Steps &amp;amp; Retrospective&lt;/h2&gt;

&lt;p&gt;We’re currently working on transpiling slag over from ES6 so it can be used with older versions of Node. If I had the chance to start this project over again, I probably would’ve paid a little more attention to making sure that transpiling would be easier down the road. While we did get to use some nifty ES6 features to handle the asynchronous API calls, it would’ve also been nice to think about accessibility from the get-go.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Slack has since made some &lt;a href=&quot;https://slack.engineering/reducing-slacks-memory-footprint-4480fec7e8eb#.79f8z8m33&quot;&gt;improvements&lt;/a&gt; to the client by moving certain teams over to a “minimal client” which a much smaller memory footprint. The full client, however, appears to use the same amount of memory.&lt;/p&gt;</content><author><name></name></author><summary type="html">This was a project I worked on with my good buddy Brandon Fujii. You can find the code for slag on Github here or see the npm module here.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/slag/slag.png" /></entry><entry><title type="html">Collaborative Code Competitions</title><link href="http://localhost:4000/unpublished/2017/02/07/ccc.html" rel="alternate" type="text/html" title="Collaborative Code Competitions" /><published>2017-02-07T19:15:04-06:00</published><updated>2017-02-07T19:15:04-06:00</updated><id>http://localhost:4000/unpublished/2017/02/07/ccc</id><content type="html" xml:base="http://localhost:4000/unpublished/2017/02/07/ccc.html">&lt;p&gt;This is my current research project for a class called Design, Technology, and Research. I’m advised by Nell O’Rourke and Haoqi Zhang; my research is funded by an Undergraduate Research Grant from the university.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Prior research has demonstrated that &lt;a href=&quot;http://journals.sagepub.com/doi/abs/10.3102/00346543069001021&quot;&gt;students learn undergraduate science, technology, engineering, and math concepts better&lt;/a&gt; &lt;a href=&quot;http://scholar.lib.vt.edu/ejournals/JTE/v7n1/gokhale.jte-v7n1.html?ref=Sawos.Org&quot;&gt;when they learn in a collaborative setting&lt;/a&gt;. Despite this, many resources for learning computer science and programming concepts (e.g. Hackerrank, Codecademy, etc.) available online put students in an isolated environment.&lt;/p&gt;

&lt;p&gt;Collaborative Code Competitions explores whether we can structure a learning environment which can promote collaborative behaviors among students. Specifically, we test this by scaffolding programming tasks for collaborative behaviors.&lt;/p&gt;</content><author><name></name></author><summary type="html">This is my current research project for a class called Design, Technology, and Research. I’m advised by Nell O’Rourke and Haoqi Zhang; my research is funded by an Undergraduate Research Grant from the university.</summary></entry></feed>